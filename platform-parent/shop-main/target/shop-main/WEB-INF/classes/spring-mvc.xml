<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd">
						
	<!-- 配置组件扫描，由框架负责扫描指定包中的类 -->					
	<context:component-scan base-package="com.wxsoft.business.controller"></context:component-scan>
	<!-- 支持spring的注解 -->					
	<context:annotation-config/>
	<mvc:annotation-driven/>
	
	<!-- 对静态资源文件的访问   缓存一年 -->  
	<mvc:resources mapping="/img/**" location="/img/"  cache-period="31536000"/>
	<mvc:resources mapping="/css/**" location="/css/" /> 
	<mvc:resources mapping="/js/**" location="/js/" />
	
    
    <!-- 缓存配置(两种) -->  
    <!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->  
    <cache:annotation-driven cache-manager="cacheManager"/>  
    <!-- Spring自己的基于java.util.concurrent.ConcurrentHashMap实现的缓存管理器(该功能是从Spring3.1开始提供的) -->  
    <!--   
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">  
        <property name="caches">  
            <set>  
                <bean name="myCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>  
            </set>  
        </property>  
    </bean>  
     -->  
    <!-- 若只想使用Spring自身提供的缓存器,则注释掉下面的两个关于Ehcache配置的bean,并启用上面的SimpleCacheManager即可 -->  
    <!-- Spring提供的基于的Ehcache实现的缓存管理器 -->  
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:ehcache.xml"/>  
    </bean>  
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
        <property name="cacheManager" ref="cacheManagerFactory"/>  
    </bean> 
    
	<!--配置拦截器, 多个拦截器,顺序执行 --> 
	<mvc:interceptors>  
		<mvc:interceptor>  
			<!-- 
				/**的意思是所有文件夹及里面的子文件夹
				/*是所有文件夹，不含子文件夹
				/是web项目的根目录 
				exclude-mapping 不拦截的url
			-->
			<mvc:mapping path="/" />
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/code"/> 
			<mvc:exclude-mapping path="/logout"/> 
			<mvc:exclude-mapping path="/css/**"/> 
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/img/**"/>
			<mvc:exclude-mapping path="/weixincore/*"/> 
			
			
			<bean class="com.wxsoft.business.interceptor.CommonInterceptor"></bean>  
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	<!-- 配置框架提供的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
</beans>